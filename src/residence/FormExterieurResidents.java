/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package residence;

import com.wia.api.Wia4j;
import com.wia.api.WiaOperationException;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author faridPC
 */
public class FormExterieurResidents extends javax.swing.JFrame {

    /**
     * Creates new form FormExterieurResidents
     */
    Resident_Gl Resident_GlRemplissage = new Resident_Gl();

    Student_Res student_ResRemplissage = new Student_Res();
    Employer Employer_Remplissage = new Employer();
    Get_Info_DB Fill_Data = new Get_Info_DB();
    ExternalStudent ExternalstudentRemplissage = new ExternalStudent(), externalstudent;
    File ImageResidentToSv = new File("D:\\Image_Signature\\imageRes.png");

    MessageErrorControl messagerror;
    private String PatternResident;
    int Gender = 1;
    JTextField ListTextExt[] = null;
    JTextField ListTextProf[] = null;

    public FormExterieurResidents() {
        initComponents();
        this.ListTextExt = new JTextField[]{txt_NumInscSdExt, txtNam_StdExt, txtSurNam_StdExt, txtPlcBirth_StdExt};
        HintTextFieldExtStd(ListTextExt);
        this.ListTextProf = new JTextField[]{txtNam_Prof, txtSurNam_Prof, txtPlcBirth_Prof};
        hintTextProfessor(ListTextProf);

        Fill_Data.Filling(txtBranch_stdExtr, "Branch_Study", "BranchStd_Name", 4);
        txtBranch_stdExtr.removeItem("/");
        Fill_Data.Filling(LevelStd_StdExtrn, "Level_Study", "DescriptionLevel", 3);
        LevelStd_StdExtrn.removeItem("/");
        ((JLabel) txtBranch_stdExtr.getRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((JLabel) LevelStd_StdExtrn.getRenderer()).setHorizontalAlignment(JLabel.CENTER);

        ButtonGroup BtnGrp = new ButtonGroup();
        BtnGrp.add(BtnRdExterieurStd);
        BtnGrp.add(BtnRdEmployeur);
        BtnGrp.add(BtnRdProf);

        ButtonGroup BtnGrpExterieur = new ButtonGroup();
        BtnGrpExterieur.add(Gdr_StdExt_Mal);
        BtnGrpExterieur.add(Gdr_femal_ExtRBtn);
        setPatternResident(BtnRdExterieurStd.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4_ = new javax.swing.JPanel();
        NumOrder = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        jLabel98 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        Img_Std = new javax.swing.JLabel();
        CLabImg = new ViewMyPrj.CLabel();
        LabPrfNumCard_StdRes = new javax.swing.JLabel();
        LabNameRestToPrint = new javax.swing.JLabel();
        LabLastNameRestToPrint = new javax.swing.JLabel();
        LabDateBirth_Plc = new javax.swing.JLabel();
        LabPlaceBirth_Res = new javax.swing.JLabel();
        LabBranchStd = new javax.swing.JLabel();
        BtnNext = new javax.swing.JButton();
        buttonView9 = new View.ButtonView();
        jPanel2 = new javax.swing.JPanel();
        PanExtrieurStd = new javax.swing.JPanel();
        jLabel168 = new javax.swing.JLabel();
        jLabel169 = new javax.swing.JLabel();
        jLabel170 = new javax.swing.JLabel();
        txtSurNam_StdExt = new javax.swing.JTextField();
        jLabel171 = new javax.swing.JLabel();
        txtNam_StdExt = new javax.swing.JTextField();
        txtPlcBirth_StdExt = new javax.swing.JTextField();
        DatBirth_StdExt = new javax.swing.JFormattedTextField();
        jLabel172 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        txt_NumInscSdExt = new javax.swing.JTextField();
        jLabel177 = new javax.swing.JLabel();
        Gdr_femal_ExtRBtn = new javax.swing.JRadioButton();
        Gdr_StdExt_Mal = new javax.swing.JRadioButton();
        txtBranch_stdExtr = new View.Combobox();
        LevelStd_StdExtrn = new View.Combobox();
        PanProfesseur = new javax.swing.JPanel();
        jLabel108 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        txtSurNam_Prof = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        txtNam_Prof = new javax.swing.JTextField();
        txtPlcBirth_Prof = new javax.swing.JTextField();
        DatBirth_Prof = new javax.swing.JFormattedTextField();
        txtProfession_Prof = new javax.swing.JTextField();
        Gdr_Prf_femal = new javax.swing.JCheckBox();
        Gdr_Prf_Mal = new javax.swing.JCheckBox();
        PanEmployer = new javax.swing.JPanel();
        Profession1 = new javax.swing.JComboBox<>();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel69 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel174 = new javax.swing.JLabel();
        Gdr_Emp_Mal1 = new javax.swing.JCheckBox();
        Gdr_Emp_femal1 = new javax.swing.JCheckBox();
        txtPlcBirth_Emply = new javax.swing.JTextField();
        jLabel180 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        DatBirth_Empl = new javax.swing.JFormattedTextField();
        txtSurNam_Empl = new javax.swing.JTextField();
        jLabel175 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        txtNam_EmplInsr = new javax.swing.JTextField();
        jLabel181 = new javax.swing.JLabel();
        Profession = new View.Combobox();
        jPanel3 = new javax.swing.JPanel();
        BtnRdExterieurStd = new javax.swing.JRadioButton();
        BtnRdEmployeur = new javax.swing.JRadioButton();
        BtnRdProf = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        buttonView4 = new View.ButtonView();
        buttonView5 = new View.ButtonView();
        buttonView6 = new View.ButtonView();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel4_.setBackground(new java.awt.Color(230, 230, 210));
        jPanel4_.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(0, 0, 0)));
        jPanel4_.setPreferredSize(new java.awt.Dimension(200, 500));

        NumOrder.setBackground(new java.awt.Color(255, 255, 255));
        NumOrder.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NumOrder.setForeground(new java.awt.Color(204, 0, 0));
        NumOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NumOrder.setText(""+(Resident_GlRemplissage.GetMAX_ID_Resident()));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("NÂ°  Order :");
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jButton26.setBackground(new java.awt.Color(255, 255, 255));
        jButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/residence/Image/scan.png"))); // NOI18N
        jButton26.setContentAreaFilled(false);
        jButton26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel98.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel98.setIcon(new javax.swing.ImageIcon(getClass().getResource("/residence/Image/FileSelect.png"))); // NOI18N
        jLabel98.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel98.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel98MouseClicked(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/residence/Image/uploadPict1.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton28.setText("setIconScan");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        Img_Std.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Img_Std.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Img_Std.setText("photo");
        Img_Std.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Img_Std.setIcon(new ImageIcon(getClass().getResource("/residence/Image/imageRes.png")));

        CLabImg.setBackground(new java.awt.Color(255, 255, 255));
        CLabImg.setText("");
        CLabImg.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/residence/Image/imageRes.png")).getImage().getScaledInstance(CLabImg.getWidth(), CLabImg.getHeight(), Image.SCALE_SMOOTH)));

        LabPrfNumCard_StdRes.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabPrfNumCard_StdRes.setForeground(new java.awt.Color(153, 153, 153));
        LabPrfNumCard_StdRes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabPrfNumCard_StdRes.setText("Ø±ÙÙ Ø§ÙØ¨Ø·Ø§ÙØ©");
        LabPrfNumCard_StdRes.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));

        LabNameRestToPrint.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabNameRestToPrint.setForeground(new java.awt.Color(153, 153, 153));
        LabNameRestToPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabNameRestToPrint.setText("Ø§ÙØ§Ø³Ù");
        LabNameRestToPrint.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        LabLastNameRestToPrint.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabLastNameRestToPrint.setForeground(new java.awt.Color(153, 153, 153));
        LabLastNameRestToPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabLastNameRestToPrint.setText("Ø§ÙÙÙØ¨");
        LabLastNameRestToPrint.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        LabDateBirth_Plc.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabDateBirth_Plc.setForeground(new java.awt.Color(153, 153, 153));
        LabDateBirth_Plc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabDateBirth_Plc.setText("ØªØ§Ø±ÙØ® Ø§ÙÙÙÙØ§Ø¯");
        LabDateBirth_Plc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        LabPlaceBirth_Res.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabPlaceBirth_Res.setForeground(new java.awt.Color(153, 153, 153));
        LabPlaceBirth_Res.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabPlaceBirth_Res.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        LabPlaceBirth_Res.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        LabBranchStd.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LabBranchStd.setForeground(new java.awt.Color(153, 153, 153));
        LabBranchStd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabBranchStd.setText("Ø§ÙØªØ®ØµØµ");
        LabBranchStd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        BtnNext.setBackground(new java.awt.Color(51, 204, 0));
        BtnNext.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtnNext.setForeground(new java.awt.Color(255, 255, 255));
        BtnNext.setText("Ø·Ø¨Ø§Ø¹ÙÙÙÙØ© Ø§ÙØ¨Ø·Ø§ÙØ©");
        BtnNext.setToolTipText("");
        BtnNext.setContentAreaFilled(false);
        BtnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnNext.setDefaultCapable(false);
        BtnNext.setOpaque(true);
        BtnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnNextActionPerformed(evt);
            }
        });

        buttonView9.setBackground(new java.awt.Color(0, 102, 102));
        buttonView9.setForeground(new java.awt.Color(255, 255, 255));
        buttonView9.setText("Ø·Ø¨Ø§Ø¹ÙÙÙÙØ© Ø§ÙØ¨Ø·Ø§ÙØ©");
        buttonView9.setBackgroundPainted(true);
        buttonView9.setEntred(false);
        buttonView9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonView9.setRounded(true);

        javax.swing.GroupLayout jPanel4_Layout = new javax.swing.GroupLayout(jPanel4_);
        jPanel4_.setLayout(jPanel4_Layout);
        jPanel4_Layout.setHorizontalGroup(
            jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4_Layout.createSequentialGroup()
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Img_Std, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CLabImg, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4_Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4_Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel4_Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NumOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4_Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonView9, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(BtnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel4_Layout.createSequentialGroup()
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4_Layout.createSequentialGroup()
                        .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(LabPlaceBirth_Res, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(LabLastNameRestToPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabNameRestToPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabDateBirth_Plc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(LabBranchStd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4_Layout.createSequentialGroup()
                        .addComponent(LabPrfNumCard_StdRes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        jPanel4_Layout.setVerticalGroup(
            jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4_Layout.createSequentialGroup()
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4_Layout.createSequentialGroup()
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Img_Std, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4_Layout.createSequentialGroup()
                        .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CLabImg, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(LabPrfNumCard_StdRes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabNameRestToPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabLastNameRestToPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabDateBirth_Plc, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(LabPlaceBirth_Res, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabBranchStd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(buttonView9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(BtnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel1.add(jPanel4_, java.awt.BorderLayout.WEST);

        jPanel2.setLayout(new java.awt.CardLayout());

        PanExtrieurStd.setBackground(new java.awt.Color(230, 230, 210));

        jLabel168.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel168.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel168.setText("Ø§ÙÙÙØ¨                    : ");
        jLabel168.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel169.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel169.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel169.setText("ØªØ§Ø±ÙØ® Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel169.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel170.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel170.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel170.setText("Ø§ÙØ§Ø³Ù                     : ");
        jLabel170.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtSurNam_StdExt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtSurNam_StdExt.setForeground(new java.awt.Color(204, 204, 204));
        txtSurNam_StdExt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSurNam_StdExt.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
        txtSurNam_StdExt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSurNam_StdExt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSurNam_StdExtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSurNam_StdExtKeyReleased(evt);
            }
        });

        jLabel171.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel171.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel171.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel171.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtNam_StdExt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNam_StdExt.setForeground(new java.awt.Color(204, 204, 204));
        txtNam_StdExt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNam_StdExt.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
        txtNam_StdExt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNam_StdExt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNam_StdExtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNam_StdExtKeyReleased(evt);
            }
        });

        txtPlcBirth_StdExt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPlcBirth_StdExt.setForeground(new java.awt.Color(204, 204, 204));
        txtPlcBirth_StdExt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlcBirth_StdExt.setText("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        txtPlcBirth_StdExt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPlcBirth_StdExt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlcBirth_StdExtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlcBirth_StdExtKeyReleased(evt);
            }
        });

        DatBirth_StdExt.setForeground(java.awt.Color.blue);
        try{
            DatBirth_StdExt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        }catch(java.text.ParseException ex){
            ex.printStackTrace();
        }
        DatBirth_StdExt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DatBirth_StdExt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DatBirth_StdExt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DatBirth_StdExt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DatBirth_StdExtFocusGained(evt);
            }
        });
        DatBirth_StdExt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatBirth_StdExtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DatBirth_StdExtKeyReleased(evt);
            }
        });

        jLabel172.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel172.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel172.setText("Ø§ÙØªØ®ÙØµØµ Ø§ÙØ¯Ø±Ø§Ø³ÙÙÙÙÙÙÙÙ       :");

        jLabel173.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel173.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel173.setText("Ø§ÙÙÙÙÙØ³ÙØªÙÙÙÙ Ø§ÙÙØ¯Ø±Ø§Ø³ÙÙ        :");

        jLabel176.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel176.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel176.setText("Ø±ÙÙÙÙ ØªÙÙØ³Ø¬ÙÙÙÙ         :");
        jLabel176.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txt_NumInscSdExt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txt_NumInscSdExt.setForeground(new java.awt.Color(204, 204, 204));
        txt_NumInscSdExt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_NumInscSdExt.setText("Ø±ÙÙÙÙ Ø§ÙØªÙÙØ³Ø¬ÙÙÙÙÙ");
        txt_NumInscSdExt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_NumInscSdExt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_NumInscSdExtKeyPressed(evt);
            }
        });

        jLabel177.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel177.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel177.setText("ÙØ¹ÙÙÙÙÙÙÙÙÙØ§Øª Ø§ÙÙÙÙØ·ÙÙÙØ§ÙÙÙÙØ¨ Ø§ÙÙÙØ®ÙÙÙØ§Ø±Ø¬ÙÙÙÙ     ");
        jLabel177.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Gdr_femal_ExtRBtn.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_femal_ExtRBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_femal_ExtRBtn.setText("ÙØ¤ÙØ«");
        Gdr_femal_ExtRBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Gdr_femal_ExtRBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Gdr_femal_ExtRBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Gdr_femal_ExtRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gdr_femal_ExtRBtnActionPerformed(evt);
            }
        });

        Gdr_StdExt_Mal.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_StdExt_Mal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_StdExt_Mal.setSelected(true);
        Gdr_StdExt_Mal.setText("ÙØ°ÙØ±");
        Gdr_StdExt_Mal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Gdr_StdExt_Mal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Gdr_StdExt_Mal.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Gdr_StdExt_Mal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gdr_StdExt_MalActionPerformed(evt);
            }
        });

        txtBranch_stdExtr.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        txtBranch_stdExtr.setLabeText("");
        txtBranch_stdExtr.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtBranch_stdExtrItemStateChanged(evt);
            }
        });
        txtBranch_stdExtr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBranch_stdExtrFocusGained(evt);
            }
        });

        LevelStd_StdExtrn.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        LevelStd_StdExtrn.setLabeText("");

        javax.swing.GroupLayout PanExtrieurStdLayout = new javax.swing.GroupLayout(PanExtrieurStd);
        PanExtrieurStd.setLayout(PanExtrieurStdLayout);
        PanExtrieurStdLayout.setHorizontalGroup(
            PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                            .addComponent(txtBranch_stdExtr, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                            .addComponent(LevelStd_StdExtrn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel173, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel177, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(txt_NumInscSdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel176, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(txtNam_StdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel170, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(txtSurNam_StdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel168, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(DatBirth_StdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel169, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanExtrieurStdLayout.createSequentialGroup()
                                .addComponent(Gdr_femal_ExtRBtn)
                                .addGap(18, 18, 18)
                                .addComponent(Gdr_StdExt_Mal, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPlcBirth_StdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(jLabel171, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );
        PanExtrieurStdLayout.setVerticalGroup(
            PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                .addComponent(jLabel177, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_NumInscSdExt, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel176, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNam_StdExt, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel170, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSurNam_StdExt, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jLabel168, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DatBirth_StdExt, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel169, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanExtrieurStdLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtPlcBirth_StdExt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel171, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Gdr_femal_ExtRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Gdr_StdExt_Mal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanExtrieurStdLayout.createSequentialGroup()
                        .addComponent(txtBranch_stdExtr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(PanExtrieurStdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel173, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LevelStd_StdExtrn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jPanel2.add(PanExtrieurStd, "card2");

        PanProfesseur.setBackground(new java.awt.Color(230, 230, 210));

        jLabel108.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel108.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel108.setText("ÙØ¹ÙÙÙÙÙÙÙÙÙØ§Øª Ø§ÙØ§Ø³ØªÙÙÙÙÙÙÙØ§Ø° Ø§ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙ     ");
        jLabel108.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel85.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel85.setText("Ø§ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙØ©      : ");
        jLabel85.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel93.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel93.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel93.setText("Ø§ÙÙÙØ¨                    : ");
        jLabel93.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel95.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel95.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel95.setText("ØªØ§Ø±ÙØ® Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel95.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel96.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel96.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel96.setText("Ø§ÙØ§Ø³Ù                     : ");
        jLabel96.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtSurNam_Prof.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtSurNam_Prof.setForeground(new java.awt.Color(204, 204, 204));
        txtSurNam_Prof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSurNam_Prof.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
        txtSurNam_Prof.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel97.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel97.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel97.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel97.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtNam_Prof.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNam_Prof.setForeground(new java.awt.Color(204, 204, 204));
        txtNam_Prof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNam_Prof.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
        txtNam_Prof.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtPlcBirth_Prof.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPlcBirth_Prof.setForeground(new java.awt.Color(204, 204, 204));
        txtPlcBirth_Prof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlcBirth_Prof.setText("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        txtPlcBirth_Prof.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        DatBirth_Prof.setForeground(java.awt.Color.blue);
        try {
            DatBirth_Prof.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        DatBirth_Prof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DatBirth_Prof.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DatBirth_Prof.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtProfession_Prof.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtProfession_Prof.setForeground(new java.awt.Color(0, 102, 204));
        txtProfession_Prof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProfession_Prof.setText("Ø§Ø³ÙÙÙØªÙØ§Ø°");
        txtProfession_Prof.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtProfession_Prof.setEnabled(false);

        Gdr_Prf_femal.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_Prf_femal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_Prf_femal.setText("ÙØ¤ÙØ«");
        Gdr_Prf_femal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Gdr_Prf_femal.setBorderPainted(true);
        Gdr_Prf_femal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Gdr_Prf_femal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Gdr_Prf_femal.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Gdr_Prf_Mal.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_Prf_Mal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_Prf_Mal.setText("ÙØ°ÙØ±");
        Gdr_Prf_Mal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Gdr_Prf_Mal.setBorderPainted(true);
        Gdr_Prf_Mal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Gdr_Prf_Mal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Gdr_Prf_Mal.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout PanProfesseurLayout = new javax.swing.GroupLayout(PanProfesseur);
        PanProfesseur.setLayout(PanProfesseurLayout);
        PanProfesseurLayout.setHorizontalGroup(
            PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanProfesseurLayout.createSequentialGroup()
                .addContainerGap(163, Short.MAX_VALUE)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addComponent(txtProfession_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addComponent(Gdr_Prf_femal, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(Gdr_Prf_Mal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel108, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanProfesseurLayout.createSequentialGroup()
                                .addComponent(txtNam_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanProfesseurLayout.createSequentialGroup()
                                .addComponent(txtSurNam_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanProfesseurLayout.createSequentialGroup()
                                .addComponent(DatBirth_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel95))
                            .addGroup(PanProfesseurLayout.createSequentialGroup()
                                .addComponent(txtPlcBirth_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29))
        );
        PanProfesseurLayout.setVerticalGroup(
            PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanProfesseurLayout.createSequentialGroup()
                .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNam_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSurNam_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DatBirth_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanProfesseurLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtPlcBirth_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProfession_Prof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(PanProfesseurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Gdr_Prf_femal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Gdr_Prf_Mal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 157, Short.MAX_VALUE))
        );

        jPanel2.add(PanProfesseur, "card3");

        PanEmployer.setBackground(new java.awt.Color(230, 230, 210));

        Profession1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Profession1.setToolTipText("");
        Profession1.setOpaque(false);

        jCheckBox4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jCheckBox4.setText("ÙØ¸ÙÙØ© Ø¬Ø¯ÙØ¯Ø©");
        jCheckBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jCheckBox4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jLabel69.setBackground(new java.awt.Color(255, 255, 255));
        jLabel69.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel69.setText("Ø­ÙØ¸ ");
        jLabel69.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel69.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel69.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel69MouseClicked(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel174.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel174.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel174.setText("Ø§ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙØ©      : ");
        jLabel174.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        Gdr_Emp_Mal1.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_Emp_Mal1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_Emp_Mal1.setSelected(true);
        Gdr_Emp_Mal1.setText("ÙØ°ÙØ±");
        Gdr_Emp_Mal1.setToolTipText("");
        Gdr_Emp_Mal1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Gdr_Emp_Mal1.setBorderPainted(true);
        Gdr_Emp_Mal1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Gdr_Emp_Mal1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Gdr_Emp_Mal1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Gdr_Emp_Mal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gdr_Emp_Mal1ActionPerformed(evt);
            }
        });

        Gdr_Emp_femal1.setBackground(new java.awt.Color(230, 230, 210));
        Gdr_Emp_femal1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Gdr_Emp_femal1.setText("ÙØ¤ÙØ«");
        Gdr_Emp_femal1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Gdr_Emp_femal1.setBorderPainted(true);
        Gdr_Emp_femal1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Gdr_Emp_femal1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Gdr_Emp_femal1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Gdr_Emp_femal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gdr_Emp_femal1ActionPerformed(evt);
            }
        });

        txtPlcBirth_Emply.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPlcBirth_Emply.setForeground(new java.awt.Color(153, 153, 153));
        txtPlcBirth_Emply.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlcBirth_Emply.setText("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        txtPlcBirth_Emply.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPlcBirth_Emply.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlcBirth_EmplyFocusGained(evt);
            }
        });
        txtPlcBirth_Emply.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlcBirth_EmplyKeyPressed(evt);
            }
        });

        jLabel180.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel180.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel180.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel180.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel178.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel178.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel178.setText("ØªØ§Ø±ÙØ® Ø§ÙÙÙÙØ§Ø¯           : ");
        jLabel178.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        DatBirth_Empl.setForeground(java.awt.Color.blue);
        try {
            DatBirth_Empl.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        DatBirth_Empl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DatBirth_Empl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DatBirth_Empl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DatBirth_Empl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatBirth_EmplKeyPressed(evt);
            }
        });

        txtSurNam_Empl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtSurNam_Empl.setForeground(new java.awt.Color(153, 153, 153));
        txtSurNam_Empl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSurNam_Empl.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
        txtSurNam_Empl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSurNam_Empl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSurNam_EmplFocusGained(evt);
            }
        });
        txtSurNam_Empl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSurNam_EmplKeyPressed(evt);
            }
        });

        jLabel175.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel175.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel175.setText("Ø§ÙÙÙØ¨                    : ");
        jLabel175.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel179.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel179.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel179.setText("Ø§ÙØ§Ø³Ù                     : ");
        jLabel179.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtNam_EmplInsr.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNam_EmplInsr.setForeground(new java.awt.Color(153, 153, 153));
        txtNam_EmplInsr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNam_EmplInsr.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
        txtNam_EmplInsr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNam_EmplInsr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNam_EmplInsrFocusGained(evt);
            }
        });
        txtNam_EmplInsr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNam_EmplInsrKeyPressed(evt);
            }
        });

        jLabel181.setBackground(new java.awt.Color(255, 255, 255));
        jLabel181.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel181.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel181.setText("ÙÙØ¹ÙÙÙÙÙÙÙÙÙÙÙÙØ§Øª Ø§ÙÙÙÙØ¹ÙÙÙØ§ÙÙÙÙÙ     ");
        jLabel181.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Profession.setLabeText("");
        Profession.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ProfessionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout PanEmployerLayout = new javax.swing.GroupLayout(PanEmployer);
        PanEmployer.setLayout(PanEmployerLayout);
        PanEmployerLayout.setHorizontalGroup(
            PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanEmployerLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanEmployerLayout.createSequentialGroup()
                            .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox4))
                            .addGap(18, 18, 18)
                            .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Profession, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(42, 42, 42)
                            .addComponent(jLabel174, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanEmployerLayout.createSequentialGroup()
                            .addGap(95, 95, 95)
                            .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanEmployerLayout.createSequentialGroup()
                                    .addComponent(txtNam_EmplInsr, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabel179, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanEmployerLayout.createSequentialGroup()
                                    .addComponent(txtSurNam_Empl, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(jLabel175, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanEmployerLayout.createSequentialGroup()
                                    .addComponent(DatBirth_Empl, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(jLabel178, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanEmployerLayout.createSequentialGroup()
                                    .addComponent(txtPlcBirth_Emply, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(jLabel180, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanEmployerLayout.createSequentialGroup()
                                    .addComponent(Gdr_Emp_femal1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(Gdr_Emp_Mal1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanEmployerLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Profession1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel181, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        PanEmployerLayout.setVerticalGroup(
            PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanEmployerLayout.createSequentialGroup()
                .addComponent(jLabel181, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNam_EmplInsr, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel179, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSurNam_Empl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel175, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DatBirth_Empl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel178, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPlcBirth_Emply, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel180, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanEmployerLayout.createSequentialGroup()
                        .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Gdr_Emp_femal1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Gdr_Emp_Mal1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanEmployerLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanEmployerLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(Profession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel174, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PanEmployerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Profession1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jPanel2.add(PanEmployer, "card4");

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(230, 230, 210));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(644, 50));

        BtnRdExterieurStd.setBackground(new java.awt.Color(230, 230, 210));
        BtnRdExterieurStd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtnRdExterieurStd.setSelected(true);
        BtnRdExterieurStd.setText("Ø·Ø§ÙØ¨ Ø®ÙÙÙØ§Ø±Ø¬ÙÙÙ");
        BtnRdExterieurStd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnRdExterieurStd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BtnRdExterieurStd.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        BtnRdExterieurStd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRdExterieurStdActionPerformed(evt);
            }
        });

        BtnRdEmployeur.setBackground(new java.awt.Color(230, 230, 210));
        BtnRdEmployeur.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtnRdEmployeur.setText("Ø¹ÙÙÙØ§ÙÙÙÙÙ");
        BtnRdEmployeur.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnRdEmployeur.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BtnRdEmployeur.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        BtnRdEmployeur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRdEmployeurActionPerformed(evt);
            }
        });

        BtnRdProf.setBackground(new java.awt.Color(230, 230, 210));
        BtnRdProf.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtnRdProf.setText("Ø§Ø³ÙÙÙØªÙØ§Ø°");
        BtnRdProf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnRdProf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BtnRdProf.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        BtnRdProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRdProfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(273, Short.MAX_VALUE)
                .addComponent(BtnRdProf, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(BtnRdEmployeur, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(BtnRdExterieurStd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRdExterieurStd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnRdEmployeur, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnRdProf, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setPreferredSize(new java.awt.Dimension(644, 50));

        buttonView4.setBackground(new java.awt.Color(0, 102, 102));
        buttonView4.setForeground(new java.awt.Color(255, 255, 255));
        buttonView4.setText("Ø­ÙØ¸");
        buttonView4.setBackgroundPainted(true);
        buttonView4.setEntred(false);
        buttonView4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonView4.setRounded(true);
        buttonView4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonView4ActionPerformed(evt);
            }
        });

        buttonView5.setBackground(new java.awt.Color(0, 102, 102));
        buttonView5.setForeground(new java.awt.Color(255, 255, 255));
        buttonView5.setText("Ø®Ø±ÙØ¬");
        buttonView5.setBackgroundPainted(true);
        buttonView5.setEntred(false);
        buttonView5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonView5.setRounded(true);

        buttonView6.setBackground(new java.awt.Color(0, 102, 102));
        buttonView6.setForeground(new java.awt.Color(255, 255, 255));
        buttonView6.setText("Ø§ÙØºØ§Ø¡");
        buttonView6.setBackgroundPainted(true);
        buttonView6.setEntred(false);
        buttonView6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonView6.setRounded(true);
        buttonView6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonView6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(buttonView5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(buttonView6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(buttonView4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonView5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonView6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(buttonView4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed

        ImageResidentToSv = GetPhotoStudentByScanner(CLabImg);

        /*try {
            // use scan function of Wia api and create file with order
            ScannerTool.scan("D:\\Photo_residents\\" + NumOrder.getText() + ".jpg");

            } catch (WiaOperationException ex) {
                JOptionPane.showMessageDialog(null, "Ø­Ø¯Ø« Ø®Ø·Ø£ Ø¨Ø§ÙÙØ§Ø³Ø­ Ø§ÙØ¶ÙØ¦Ù\n Ø§ÙØ±Ø¬Ø§Ø¡ ØªØ­ÙÙÙ Ø§ÙØµÙØ±Ø© ÙØ¯ÙÙØ§");
            }*/
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jLabel98MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel98MouseClicked
        // TODO add your handling code here:
        //ImageResidentToSv = SelectPictToResident(Img_Std);
        ImageResidentToSv = SelectPictToResident(CLabImg);
    }//GEN-LAST:event_jLabel98MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // InsertPictResident
            //ImageResidentToSv = UploadPictResident(Img_Std);
            ImageResidentToSv = UploadPictResident(CLabImg);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, messagerror);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BtnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnNextActionPerformed
        PrintingCrd(LabPrfNumCard_StdRes);
    }//GEN-LAST:event_BtnNextActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        try {
            // InsertPictResident

            ImageResidentToSv = UploadPictResident(CLabImg);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, messagerror);
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void txtSurNam_StdExtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurNam_StdExtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DatBirth_StdExt.requestFocus();
        } else if (Character.isLetter(evt.getKeyChar())) {
            //LabLastNameRestToPrint.setForeground(Color.black);
            LabLastNameRestToPrint.setText(txtSurNam_StdExt.getText() + evt.getKeyChar() + "");
        }
    }//GEN-LAST:event_txtSurNam_StdExtKeyPressed
    // use StringBuilder for add character

    private void txtNam_StdExtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNam_StdExtKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtSurNam_StdExt.requestFocus();
        } else if (Character.isLetter(evt.getKeyChar())) {
            //LabNameRestToPrint.setForeground(Color.black);
            LabNameRestToPrint.setText(txtNam_StdExt.getText() + evt.getKeyChar() + "");
        }//else if (evt.getKeyCode()==KeyEvent.VK_BACK_SPACE)
        // LabNameRestToPrint.setText(txtNam_StdExt.getText());
    }//GEN-LAST:event_txtNam_StdExtKeyPressed

    private void txtPlcBirth_StdExtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlcBirth_StdExtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Gdr_StdExt_Mal.requestFocus();
        } else if (Character.isLetter(evt.getKeyChar())) {
            //LabPlaceBirth_Res.setForeground(Color.black);
            LabPlaceBirth_Res.setText(txtPlcBirth_StdExt.getText() + evt.getKeyChar() + "");
        }
    }//GEN-LAST:event_txtPlcBirth_StdExtKeyPressed

    private void DatBirth_StdExtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatBirth_StdExtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPlcBirth_StdExt.requestFocus();
        } else if (Character.isDigit(evt.getKeyChar())) {
            //LabDateBirth_Plc.setForeground(Color.black);
            LabDateBirth_Plc.setText(DatBirth_StdExt.getText() + evt.getKeyChar() + "");
        }
    }//GEN-LAST:event_DatBirth_StdExtKeyPressed

    private void txt_NumInscSdExtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NumInscSdExtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtNam_StdExt.requestFocus();
        }

    }//GEN-LAST:event_txt_NumInscSdExtKeyPressed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if (jCheckBox4.isSelected()) {
            jTextField2.setVisible(true);
            jLabel69.setVisible(true);
        } else {
            jLabel69.setVisible(false);
            jTextField2.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jLabel69MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel69MouseClicked
        String Proffession_txt = jTextField2.getText();
        if ("".equals(Proffession_txt)) {
            JOptionPane.showMessageDialog(null, "ØªØ£ÙØ¯ ÙÙ ØªØ¹Ø¨Ø¦Ø© Ø­ÙÙ Ø§ÙÙÙÙØ©");
        } else {
            if (Employer_Remplissage.ConrolSais_Prof(Proffession_txt) == 1) {
                JOptionPane.showMessageDialog(null, "ÙØ°Ù Ø§ÙÙÙÙÙØ© ÙÙØ¬ÙØ¯Ø© Ø³Ø§Ø¨ÙØ§");
            } else {
                int cn = Employer_Remplissage.InsertProffession(Proffession_txt);
                if (cn == 1) {
                    Fill_Data.Filling(Profession, "Profession", "Profession", 6);
                    Profession.removeItem("/");
                    jTextField2.setText("");
                    Profession.setSelectedItem(Proffession_txt);
                }
            }
        }
    }//GEN-LAST:event_jLabel69MouseClicked

    private void Gdr_Emp_Mal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gdr_Emp_Mal1ActionPerformed
        if (Gdr_Emp_Mal1.isSelected() == true) {
            Gdr_Emp_femal1.setSelected(false);
            Gender = 1;
            Profession.requestFocus();
        } else {
            Gdr_Emp_femal1.setSelected(true);
            Gender = 2;
        }
    }//GEN-LAST:event_Gdr_Emp_Mal1ActionPerformed

    private void Gdr_Emp_femal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gdr_Emp_femal1ActionPerformed
        if (Gdr_Emp_femal1.isSelected() == true) {
            Gdr_Emp_Mal1.setSelected(false);
            Gender = 2;
            Profession.requestFocus();
        } else {
            Gdr_Emp_Mal1.setSelected(true);
            Gender = 1;
        }
    }//GEN-LAST:event_Gdr_Emp_femal1ActionPerformed

    private void txtPlcBirth_EmplyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlcBirth_EmplyFocusGained
        if (txtPlcBirth_Emply.getText().equals("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯")) {
            txtPlcBirth_Emply.setText("");
        }
        txtPlcBirth_Emply.setForeground(Color.blue);
    }//GEN-LAST:event_txtPlcBirth_EmplyFocusGained

    private void txtPlcBirth_EmplyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlcBirth_EmplyKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (!txtPlcBirth_Emply.getText().equals(""))) {
            Gdr_Emp_Mal1.requestFocus();
        }
    }//GEN-LAST:event_txtPlcBirth_EmplyKeyPressed

    private void DatBirth_EmplKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatBirth_EmplKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (!DatBirth_Empl.getText().equals(""))) {
            txtPlcBirth_Emply.requestFocus();
        }
    }//GEN-LAST:event_DatBirth_EmplKeyPressed

    private void txtSurNam_EmplFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSurNam_EmplFocusGained
        if (txtSurNam_Empl.getText().equals("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨")) {
            txtSurNam_Empl.setText("");
        }
        txtSurNam_Empl.setForeground(Color.blue);
    }//GEN-LAST:event_txtSurNam_EmplFocusGained

    private void txtSurNam_EmplKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurNam_EmplKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (!txtSurNam_Empl.getText().equals(""))) {
            DatBirth_Empl.requestFocus();
        }
    }//GEN-LAST:event_txtSurNam_EmplKeyPressed

    private void txtNam_EmplInsrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNam_EmplInsrFocusGained
        if (txtNam_EmplInsr.getText().equals("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù")) {
            txtNam_EmplInsr.setText("");
        }
        txtNam_EmplInsr.setForeground(Color.blue);
    }//GEN-LAST:event_txtNam_EmplInsrFocusGained

    private void txtNam_EmplInsrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNam_EmplInsrKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (!txtNam_EmplInsr.getText().equals(""))) {
            txtSurNam_Empl.requestFocus();
        }
    }//GEN-LAST:event_txtNam_EmplInsrKeyPressed

    private void BtnRdProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRdProfActionPerformed
        setPatternResident(BtnRdProf.getText());
        PanProfesseur.setVisible(true);
        PanEmployer.setVisible(false);
        PanExtrieurStd.setVisible(false);
        this.initialiseFieldPanelShowingData();
    }//GEN-LAST:event_BtnRdProfActionPerformed

    private void BtnRdExterieurStdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRdExterieurStdActionPerformed
        setPatternResident(BtnRdExterieurStd.getText());

        Fill_Data.Filling(txtBranch_stdExtr, "Branch_Study", "BranchStd_Name", 4);
        txtBranch_stdExtr.removeItem("/");
        Fill_Data.Filling(LevelStd_StdExtrn, "Level_Study", "DescriptionLevel", 3);
        LevelStd_StdExtrn.removeItem("/");
        Gender = 1;

        this.initialiseFieldPanelShowingData();

        PanExtrieurStd.setVisible(true);
        PanProfesseur.setVisible(false);
        PanEmployer.setVisible(false);


    }//GEN-LAST:event_BtnRdExterieurStdActionPerformed

    private void BtnRdEmployeurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRdEmployeurActionPerformed

        setPatternResident(BtnRdEmployeur.getText());
        PanEmployer.setVisible(true);
        PanExtrieurStd.setVisible(false);
        PanProfesseur.setVisible(false);

        this.initialiseFieldPanelShowingData();

    }//GEN-LAST:event_BtnRdEmployeurActionPerformed

    private void Gdr_StdExt_MalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gdr_StdExt_MalActionPerformed
        if (Gdr_StdExt_Mal.isSelected() == true) {
            //Gdr_Prf_femal5.setSelected(false);
            Gender = 1;

        } else {
            //Gdr_Prf_femal5.setSelected(true);
            Gender = 2;
        }
    }//GEN-LAST:event_Gdr_StdExt_MalActionPerformed

    private void Gdr_femal_ExtRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gdr_femal_ExtRBtnActionPerformed
        if (Gdr_femal_ExtRBtn.isSelected() == true) {

            Gender = 2;
        } else {

            Gender = 1;
        }
    }//GEN-LAST:event_Gdr_femal_ExtRBtnActionPerformed

    private void txtNam_StdExtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNam_StdExtKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            LabNameRestToPrint.setText(txtNam_StdExt.getText());
        }
    }//GEN-LAST:event_txtNam_StdExtKeyReleased

    private void buttonView4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonView4ActionPerformed
        SimpleDateFormat Format = new SimpleDateFormat("dd/MM/yyyy");
        if (BtnRdExterieurStd.isSelected()) {
            //jLabel55.setText(DatBirth_StdExt.getText());
            //JOptionPane.showMessageDialog(null, "The Resident :"+getPatternResident()+"Date Birth is :"+DatBirth_StdExt.getText());
            String b[] = DatBirth_StdExt.getText().split("/");
            String NevDatb = b[0] + "-" + b[1] + "-" + b[2];
            // JOptionPane.showMessageDialog(null, "The Resident :"+getPatternResident());
            try {
                externalstudent = new ExternalStudent(txtNam_StdExt.getText(), txtSurNam_StdExt.getText(), 1, "",new SimpleDateFormat("dd-MM-yyyy").parse(NevDatb), 
                    txtPlcBirth_StdExt.getText(),Gender, Fill_Data.GetId_From_DB("Id_Ptrn_Res", "Pattern_Person_Res", "Name_Patern",
                    getPatternResident()),8, txt_NumInscSdExt.getText(), Fill_Data.GetId_From_DB("Id_BranchStd", "Branch_Study", "BranchStd_Name",(String) txtBranch_stdExtr.getSelectedItem()),
                        Fill_Data.GetId_From_DB("Id_LevelStudy", "Level_Study", "DescriptionLevel", (String) LevelStd_StdExtrn.getSelectedItem()),
                        new Date(), 0);

            } catch (ParseException ex) {
                //Logger.getLogger(FormExterieurResidents.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Ø­Ø¯Ø« Ø®Ø·Ø£ Ø§Ø«ÙØ§Ø¡ Ø¹ÙÙÙØ© Ø§ÙØ­ÙØ¸ Ø§ÙØ±Ø¬Ø§Ø¡ Ø§ÙØªØ£ÙØ¯ ÙÙ Ø§ÙÙØ¹ÙÙÙØ§Øª Ø§ÙÙØ¯Ø®ÙØ©");
            }
            externalstudent.setImageRes(ImageResidentToSv);//
            externalstudent.AddRsident();

            if (externalstudent.getValConfiramation() != 0) {       // when success add ExternelStudent Data in DB
                /*LabPrfNumCard_StdRes.setText("" + externalstudent.getNumbre_CardRes());
                LabNameRestToPrint.setText(externalstudent.getFirst_name());
                LabLastNameRestToPrint.setText(externalstudent.getLast_name());
                LabDateBirth_Plc.setText(Format.format(externalstudent.getDateBirth()));
                LabPlaceBirth_Res.setText(externalstudent.getPlaceBirth());
                LabBranchStd.setText((String) txtBranch_stdExtr.getSelectedItem());
                 */

                setDataOfResidents("" + externalstudent.getNumbre_CardRes(), externalstudent.getFirst_name(), externalstudent.getLast_name(),
                         Format.format(externalstudent.getDateBirth()), externalstudent.getPlaceBirth(), (String) txtBranch_stdExtr.getSelectedItem());

                new SuccessAlert1(this).setVisible(true);

                this.InitializeFieldsDataExternalStudent();

                //initialiseFieldPanelShowingData();
                //Initialise_ExternalStudent_Resident(txt_NumInscSdExt, txtNam_StdExt, txtSurNam_StdExt, DatBirth_StdExt, txtPlcBirth_StdExt, Gdr_StdExt_Mal, txtBranch_stdExtr, LevelStd_StdExtrn, null, 1);
                //ImageResidentToSv = InitialiseImageResident(Img_Std);
            } else {
                messagerror = new MessageErrorControl(this, true, "Ø§ÙØ±Ø¬ÙÙØ§Ø¡ Ø§Ø¹ÙÙØ§Ø¯Ø© Ø§Ø¯Ø®ÙÙØ§Ù Ø§ÙØ¨ÙØ§ÙØ§Øª");
                messagerror.setVisible(true);
            }

        } else if (BtnRdEmployeur.isSelected()) {

        } else {

        }
    }//GEN-LAST:event_buttonView4ActionPerformed

    private void txtSurNam_StdExtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurNam_StdExtKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            LabLastNameRestToPrint.setText(txtSurNam_StdExt.getText());
        }
    }//GEN-LAST:event_txtSurNam_StdExtKeyReleased

    private void txtPlcBirth_StdExtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlcBirth_StdExtKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            LabPlaceBirth_Res.setText(txtPlcBirth_StdExt.getText());
        }
    }//GEN-LAST:event_txtPlcBirth_StdExtKeyReleased

    private void DatBirth_StdExtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatBirth_StdExtKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            LabDateBirth_Plc.setText(DatBirth_StdExt.getText());
        }

    }//GEN-LAST:event_DatBirth_StdExtKeyReleased

    private void DatBirth_StdExtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DatBirth_StdExtFocusGained
        DatBirth_StdExt.setText("");
        LabDateBirth_Plc.setText("");
        DatBirth_StdExt.setForeground(Color.BLACK);
    }//GEN-LAST:event_DatBirth_StdExtFocusGained

    private void txtBranch_stdExtrItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtBranch_stdExtrItemStateChanged
        LabBranchStd.setText((String) txtBranch_stdExtr.getSelectedItem());
    }//GEN-LAST:event_txtBranch_stdExtrItemStateChanged

    private void txtBranch_stdExtrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBranch_stdExtrFocusGained
        LabBranchStd.setText("");
        //LabBranchStd.setForeground(Color.black);
    }//GEN-LAST:event_txtBranch_stdExtrFocusGained

    private void buttonView6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonView6ActionPerformed

        this.InitializeFieldsDataExternalStudent();
        this.initialiseFieldPanelShowingData();

    }//GEN-LAST:event_buttonView6ActionPerformed

    private void ProfessionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ProfessionItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ProfessionItemStateChanged

    public void PrintingCrd(JLabel lab) {

        if (lab.getText().equals("")) {
            messagerror = new MessageErrorControl(this, true, "ÙÙ ÙØªÙ Ø§ÙØ¹Ø«ÙÙÙÙØ± Ø¹ÙÙ Ø±ÙÙÙÙ Ø§ÙØ¨Ø·ÙÙØ§ÙÙØ©");
            messagerror.setVisible(true);

        } else {
            switch (getPatternResident()) {
                case "Ø¹ÙÙÙØ§ÙÙÙÙÙ":
                    Employer_Remplissage.PrintCardEmpl_Prof(Integer.parseInt(lab.getText()), "Ø¨Ø·Ø§ÙÙØ© ÙÙÙÙØ©");
                    break;
                case "Ø§Ø³ÙÙÙØªÙØ§Ø°":
                    Employer_Remplissage.PrintCardEmpl_ProfOnly(Integer.parseInt(lab.getText()), "Ø¨ÙØ·Ø§ÙÙØ© ÙÙÙÙÙÙÙ");
                    break;
                case "Ø·Ø§ÙØ¨ Ø®ÙÙÙØ§Ø±Ø¬ÙÙÙ":
                    ExternalstudentRemplissage.CardExternal(Integer.parseInt(lab.getText()));
                    break;
                default:
                    System.out.println("No Choice found");
            }
        }
    }

    String getPatternResident() {
        return PatternResident;
    }

    public File SelectPictToResident(JLabel labImg) {
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File fileImage = chooser.getSelectedFile();
        if (fileImage != null) {
            BufferedImage bufImg = null;
            try {
                bufImg = ImageIO.read(fileImage);
            } catch (IOException ex) {
                Logger.getLogger(FormExterieurResidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            labImg.setIcon(new ImageIcon(new ImageIcon(bufImg).getImage().getScaledInstance(labImg.getWidth(), labImg.getHeight(), Image.SCALE_SMOOTH)));
            student_ResRemplissage.SetVarPht(1);
            return fileImage;
        }

        student_ResRemplissage.SetVarPht(0);
        return ImageResidentToSv;
    }

    /**
     * @param label
     * **************************************************************************************************
     * @return
     * @throws java.io.IOException
     */
    public File UploadPictResident(JLabel label) throws IOException {
        String path = "D:\\Photo_residents\\";
        File fileImage = new File("D:\\Image_Signature\\imageRes.png");
        File dir = new File(path);
        File[] files = dir.listFiles();

        if (files == null || files.length == 0) {
            messagerror = new MessageErrorControl(this, true, "ÙØ§ ØªÙØ¬ÙÙØ¯ ØµÙÙÙØ±Ø© Ø§ÙØ±Ø¬ÙÙØ§Ø¡ Ø§Ø¶ÙÙØ§ÙØ© ØµÙÙÙØ±Ø© ");
            messagerror.setVisible(true);
            student_ResRemplissage.SetVarPht(0);
            return fileImage;

        } else {

            File lastModifiedFile = files[0];
            for (int i = 1; i < files.length; i++) {
                if (lastModifiedFile.lastModified() < files[i].lastModified()) {
                    lastModifiedFile = files[i];
                    System.out.println("residence.Home1.UploadPictResident()" + lastModifiedFile.getName());
                }
            }
            // JOptionPane.showMessageDialog(null, "is a  FILES Gets in Folder And The File is :"+lastModifiedFile.getAbsolutePath());
            BufferedImage bufImg = ImageIO.read(lastModifiedFile);
            label.setIcon(new ImageIcon(new ImageIcon(bufImg).getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH)));
            student_ResRemplissage.SetVarPht(1);
            return lastModifiedFile;
        }

    }

    /**
     *
     *
     * @param CLabImg for show image in label
     * @return file to save it in database
     */
    public File GetPhotoStudentByScanner(JLabel CLabImg) {

        Wia4j wia4j = new Wia4j();
        File fileImage = null;
        try {
            fileImage = new File("D:\\Photo_residents\\" + NumOrder.getText() + ".jpg");
            if (fileImage.exists()) {
                JOptionPane.showMessageDialog(null, "This fil isExists ");
                fileImage.delete();
                JOptionPane.showMessageDialog(null, "Success deleting file:" + fileImage.getName());
            }
            wia4j.scan("D:\\Photo_residents\\" + NumOrder.getText() + ".jpg");

        } catch (WiaOperationException ex) {
            System.out.println("Error Exception ");
        }
        BufferedImage bufImg = null;
        try {
            bufImg = ImageIO.read(fileImage);
            System.out.println("succes read file");
        } catch (IOException ex) {
            //Logger.getLogger(FormEmployer.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
        CLabImg.setIcon(new ImageIcon(new ImageIcon(bufImg).getImage().getScaledInstance(CLabImg.getWidth(), CLabImg.getHeight(), Image.SCALE_SMOOTH)));
        return fileImage;
    }

    /**
     * *****************************************************************************
     * @param PatternResident
     */
    public void setPatternResident(String PatternResident) {
        this.PatternResident = PatternResident;
    }

    /**
     * *************************************************************
     */
    public void HintTextFieldExtStd(JTextField[] TabTextField) {

        for (JTextField TextField : TabTextField) {

            TextField.addFocusListener(new FocusListener() {
                @Override
                public void focusGained(FocusEvent e) {
                    switch (TextField.getText()) {
                        case "Ø±ÙÙÙÙ Ø§ÙØªÙÙØ³Ø¬ÙÙÙÙÙ":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            break;

                        case "Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabNameRestToPrint.setText("");
                            break;

                        case "Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabLastNameRestToPrint.setText("");
                            break;

                        case "Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabPlaceBirth_Res.setText("");
                            break;

                    }
                }

                @Override
                public void focusLost(FocusEvent e) {

                    if (TextField.equals(txt_NumInscSdExt) && TextField.getText().equals("")) {
                        TextField.setText("Ø±ÙÙÙÙ Ø§ÙØªÙÙØ³Ø¬ÙÙÙÙÙ");
                        TextField.setForeground(new Color(204, 204, 204));

                    } else if (TextField.equals(txtNam_StdExt) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
                        TextField.setForeground(new Color(204, 204, 204));
                        LabNameRestToPrint.setText("Ø§ÙØ§Ø³Ù");

                    } else if (TextField.equals(txtSurNam_StdExt) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
                        LabLastNameRestToPrint.setText("Ø§ÙÙÙØ¨");
                        TextField.setForeground(new Color(204, 204, 204));

                    } else if (TextField.equals(txtPlcBirth_StdExt) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
                        LabPlaceBirth_Res.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
                        TextField.setForeground(new Color(204, 204, 204));

                    }

                }

            });

        }

    }

    public void hintTextProfessor(JTextField[] TabTextField) {
        for (JTextField TextField : TabTextField) {

            TextField.addFocusListener(new FocusListener() {
                @Override
                public void focusGained(FocusEvent e) {
                    switch (TextField.getText()) {
                        case "Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabNameRestToPrint.setText("");
                            break;

                        case "Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabLastNameRestToPrint.setText("");
                            break;

                        case "Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯":
                            TextField.setText("");
                            TextField.setForeground(Color.black);
                            LabPlaceBirth_Res.setText("");
                            break;

                    }
                }

                @Override
                public void focusLost(FocusEvent e) {

                    if (TextField.equals(txtNam_Prof) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
                        TextField.setForeground(new Color(204, 204, 204));
                        LabNameRestToPrint.setText("Ø§ÙØ§Ø³Ù");

                    } else if (TextField.equals(txtSurNam_Prof) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
                        LabLastNameRestToPrint.setText("Ø§ÙÙÙØ¨");
                        TextField.setForeground(new Color(204, 204, 204));

                    } else if (TextField.equals(txtPlcBirth_Prof) && TextField.getText().equals("")) {
                        TextField.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
                        LabPlaceBirth_Res.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
                        TextField.setForeground(new Color(204, 204, 204));

                    }

                }

            });

        }

    }

    /**
     * Initialise Data Information
     *
     */

    public void initialiseFieldPanelShowingData() {
        LabPrfNumCard_StdRes.setText("Ø±ÙÙ Ø§ÙØ¨Ø·Ø§ÙØ©");
        LabNameRestToPrint.setText("Ø§ÙØ§Ø³Ù");
        LabLastNameRestToPrint.setText("Ø§ÙÙÙØ¨");
        LabDateBirth_Plc.setText("ØªØ§Ø±ÙØ® Ø§ÙÙÙÙØ§Ø¯");
        LabPlaceBirth_Res.setText("ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        if (getPatternResident().equals(BtnRdExterieurStd.getText())) {
            LabBranchStd.setText("Ø§ÙØªØ®ØµØµ");
        } else {
            LabBranchStd.setText("Ø§ÙÙÙÙØ©");
        }

    }

    public void setDataOfResidents(String NumCard, String NameStd, String LastName, String DateBirth, String PlaceBirth, String Branch_Profess) {
        LabPrfNumCard_StdRes.setText(NumCard);
        LabNameRestToPrint.setText(NameStd);
        LabLastNameRestToPrint.setText(LastName);
        LabDateBirth_Plc.setText(DateBirth);
        LabPlaceBirth_Res.setText(PlaceBirth);
        LabBranchStd.setText(Branch_Profess);
    }

    public void InitializeFieldsDataExternalStudent() {
        txt_NumInscSdExt.setText("Ø±ÙÙÙÙ Ø§ÙØªÙÙØ³Ø¬ÙÙÙÙÙ");
        txt_NumInscSdExt.setForeground(new Color(204, 204, 204));
        txtNam_StdExt.setText("Ø§Ø¯Ø®Ù Ø§ÙØ§Ø³Ù");
        txtNam_StdExt.setForeground(new Color(204, 204, 204));
        txtSurNam_StdExt.setText("Ø§Ø¯Ø®Ù Ø§ÙÙÙØ¨");
        txtSurNam_StdExt.setForeground(new Color(204, 204, 204));

        DatBirth_StdExt.setText("");

        txtPlcBirth_StdExt.setText("Ø§Ø¯Ø®Ù ÙÙØ§Ù Ø§ÙÙÙÙØ§Ø¯");
        txtPlcBirth_StdExt.setForeground(new Color(204, 204, 204));
        Gdr_StdExt_Mal.setSelected(true);
        Gender = 1;
        txtBranch_stdExtr.setSelectedIndex(0);
        LevelStd_StdExtrn.setSelectedIndex(0);

        CLabImg.setIcon(new ImageIcon(getClass().getResource("/residence/Image/imageRes.png")));
    }

    /**
     * *****************************************************
     */

    public void ValidateNumber_NextOfExternalStudent() {
        NumOrder.setText("" + (Resident_GlRemplissage.GetMAX_ID_Resident()));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormExterieurResidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormExterieurResidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormExterieurResidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormExterieurResidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                System.out.println("First affichage ....");
                new FormExterieurResidents().setVisible(true);
                System.out.println("Last affichage...");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnNext;
    private javax.swing.JRadioButton BtnRdEmployeur;
    private javax.swing.JRadioButton BtnRdExterieurStd;
    private javax.swing.JRadioButton BtnRdProf;
    private ViewMyPrj.CLabel CLabImg;
    private javax.swing.JFormattedTextField DatBirth_Empl;
    private javax.swing.JFormattedTextField DatBirth_Prof;
    private javax.swing.JFormattedTextField DatBirth_StdExt;
    private javax.swing.JCheckBox Gdr_Emp_Mal1;
    private javax.swing.JCheckBox Gdr_Emp_femal1;
    private javax.swing.JCheckBox Gdr_Prf_Mal;
    private javax.swing.JCheckBox Gdr_Prf_femal;
    private javax.swing.JRadioButton Gdr_StdExt_Mal;
    private javax.swing.JRadioButton Gdr_femal_ExtRBtn;
    private javax.swing.JLabel Img_Std;
    private javax.swing.JLabel LabBranchStd;
    private javax.swing.JLabel LabDateBirth_Plc;
    private javax.swing.JLabel LabLastNameRestToPrint;
    private javax.swing.JLabel LabNameRestToPrint;
    private javax.swing.JLabel LabPlaceBirth_Res;
    private javax.swing.JLabel LabPrfNumCard_StdRes;
    private View.Combobox LevelStd_StdExtrn;
    private javax.swing.JLabel NumOrder;
    private javax.swing.JPanel PanEmployer;
    private javax.swing.JPanel PanExtrieurStd;
    private javax.swing.JPanel PanProfesseur;
    private View.Combobox Profession;
    private javax.swing.JComboBox<String> Profession1;
    private View.ButtonView buttonView4;
    private View.ButtonView buttonView5;
    private View.ButtonView buttonView6;
    private View.ButtonView buttonView9;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton28;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel169;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel4_;
    private javax.swing.JTextField jTextField2;
    private View.Combobox txtBranch_stdExtr;
    private javax.swing.JTextField txtNam_EmplInsr;
    private javax.swing.JTextField txtNam_Prof;
    private javax.swing.JTextField txtNam_StdExt;
    private javax.swing.JTextField txtPlcBirth_Emply;
    private javax.swing.JTextField txtPlcBirth_Prof;
    private javax.swing.JTextField txtPlcBirth_StdExt;
    private javax.swing.JTextField txtProfession_Prof;
    private javax.swing.JTextField txtSurNam_Empl;
    private javax.swing.JTextField txtSurNam_Prof;
    private javax.swing.JTextField txtSurNam_StdExt;
    private javax.swing.JTextField txt_NumInscSdExt;
    // End of variables declaration//GEN-END:variables
}
